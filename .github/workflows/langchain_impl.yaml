name: Langchain implementation workflow

on:
  pull_request:
    branches: ["main", "dev"]
    paths: ["backend/langchain_impl/**"]

permissions:
  contents: read

defaults:
  run:
    working-directory: backend/langchain_impl

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install poetry and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Lint with Flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Start FastAPI server
        env:
          OPENAI_API_KEY: ${{ secrets.TEST_API_KEY }}
          # --- prevent AWS calls in CI ---
          CHECKPOINTER_BACKEND: memory
          DEPLOY_DDB: "false"
          USER_AGENT: ragdemon-ci/1.0
          AWS_EC2_METADATA_DISABLED: "true"
        run: |
          poetry run uvicorn src.server:api --host 127.0.0.1 --port 8000 & sleep 3

      - name: Test with PyTest
        env:
          OPENAI_API_KEY: ${{ secrets.TEST_API_KEY }}
          # --- prevent AWS calls in CI ---
          CHECKPOINTER_BACKEND: memory
          DEPLOY_DDB: "false"
          USER_AGENT: ragdemon-ci/1.0
          AWS_EC2_METADATA_DISABLED: "true"
        run: poetry run pytest
